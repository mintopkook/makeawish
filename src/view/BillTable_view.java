/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import edu.sit.cs.db.CSDbDelegate;
import java.awt.Image;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static restaurantprojectg6.BillTable.currentTable;
import restaurantprojectg6.Billing1;

/**
 *
 * @author tabook
 */
public class BillTable_view extends javax.swing.JFrame {

    /**
     * Creates new form BillTable_view
     */
    
    public static int currentTable;
    String[] tableE = new String[12];
    int tableNo;
    static CSDbDelegate db = new CSDbDelegate("csprog-in.sit.kmutt.ac.th", "3306", "CSC105_G6", "csc105_2014", "csc105");
    
    
    public BillTable_view() {
         initComponent();
        updateTable();
        setSize(800,600);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void updateTable(){
        db.connect();
        String checkT = "SELECT isEmpty FROM RESTAURANT_Table";
        ArrayList<HashMap> table = db.queryRows(checkT);
        int i = 0;
        for(HashMap x: table){
            tableE[i] = (String)(x.get("isEmpty"));
            i++;
        }
        if(tableE[0].equals("true")){
            Table1.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table1.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[1].equals("true")){
            Table2.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table2.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[2].equals("true")){
            Table3.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table3.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        
        if(tableE[3].equals("true")){
            Table4.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table4.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        
        if(tableE[4].equals("true")){
            Table5.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table5.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[5].equals("true")){
            Table6.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table6.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[6].equals("true")){
            Table7.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table7.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        
        if(tableE[7].equals("true")){
            Table8.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table8.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[8].equals("true")){
            Table9.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table9.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[9].equals("true")){
            Table10.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table10.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[10].equals("true")){
            Table11.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table11.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        
        if(tableE[11].equals("true")){
            Table12.setIcon(new ImageIcon(this.getClass().getResource("Check.png")));
        }else{
            Table12.setIcon(new ImageIcon(this.getClass().getResource("Error.png")));
        }
        db.disconnect();
    }

    public int getCurrentTable(){
        return currentTable;
    }
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initComponent() {

        Table3 = new javax.swing.JToggleButton();
        Table2 = new javax.swing.JToggleButton();
        Table5 = new javax.swing.JToggleButton();
        Table1 = new javax.swing.JToggleButton();
        Table12 = new javax.swing.JToggleButton();
        Table4 = new javax.swing.JToggleButton();
        Table6 = new javax.swing.JToggleButton();
        Table7 = new javax.swing.JToggleButton();
        Table8 = new javax.swing.JToggleButton();
        Table9 = new javax.swing.JToggleButton();
        Table10 = new javax.swing.JToggleButton();
        Table11 = new javax.swing.JToggleButton();
        doneButton = new javax.swing.JButton();
        DoneButtom1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        Table3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table3MouseClicked(evt);
            }
        });
        getContentPane().add(Table3);
        Table3.setBounds(670, 220, 30, 30);

        Table2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table2MouseClicked(evt);
            }
        });
        getContentPane().add(Table2);
        Table2.setBounds(640, 30, 30, 30);

        Table5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table5MouseClicked(evt);
            }
        });
        getContentPane().add(Table5);
        Table5.setBounds(420, 30, 30, 30);

        Table1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Check.png"))); // NOI18N
        Table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table1MouseClicked(evt);
            }
        });
        Table1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table1ActionPerformed(evt);
            }
        });
        getContentPane().add(Table1);
        Table1.setBounds(140, 210, 30, 30);

        Table12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table12MouseClicked(evt);
            }
        });
        getContentPane().add(Table12);
        Table12.setBounds(450, 230, 30, 30);

        Table4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table4MouseClicked(evt);
            }
        });
        getContentPane().add(Table4);
        Table4.setBounds(310, 120, 30, 30);

        Table6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table6MouseClicked(evt);
            }
        });
        getContentPane().add(Table6);
        Table6.setBounds(180, 80, 30, 30);

        Table7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table7MouseClicked(evt);
            }
        });
        getContentPane().add(Table7);
        Table7.setBounds(560, 130, 30, 30);

        Table8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table8MouseClicked(evt);
            }
        });
        getContentPane().add(Table8);
        Table8.setBounds(670, 110, 30, 30);

        Table9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table9MouseClicked(evt);
            }
        });
        Table9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table9ActionPerformed(evt);
            }
        });
        getContentPane().add(Table9);
        Table9.setBounds(530, 30, 30, 30);

        Table10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table10MouseClicked(evt);
            }
        });
        getContentPane().add(Table10);
        Table10.setBounds(450, 130, 30, 30);

        Table11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/Check.png"))); // NOI18N
        Table11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table11MouseClicked(evt);
            }
        });
        getContentPane().add(Table11);
        Table11.setBounds(560, 230, 30, 30);

        doneButton.setBackground(new java.awt.Color(255, 204, 204));
        doneButton.setForeground(new java.awt.Color(51, 51, 51));
        doneButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/girl.png"))); // NOI18N
        doneButton.setToolTipText("");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });
        getContentPane().add(doneButton);
        doneButton.setBounds(600, 500, 170, 70);

        DoneButtom1.setBackground(new java.awt.Color(255, 255, 255));
        DoneButtom1.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        DoneButtom1.setText("BACK");
        DoneButtom1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneButtom1ActionPerformed(evt);
            }
        });
        getContentPane().add(DoneButtom1);
        DoneButtom1.setBounds(60, 530, 90, 29);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/plan.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(80, 10, 640, 520);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restaurantprojectg6/Picture/bg2.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(800, 600));
        jLabel1.setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>     
    
    private void Table3MouseClicked(java.awt.event.MouseEvent evt) {                                    
        System.out.println(db.connect());
        currentTable = tableNo = 3;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table3.isSelected()){
            Table3.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table3.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.connect());
    }                                   

    private void Table2MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 2;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table2.isSelected()){
            Table2.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table2.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table5MouseClicked(java.awt.event.MouseEvent evt) {                                    
        System.out.println(db.connect());
        currentTable = tableNo = 5;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table5.isSelected()){
            Table5.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table5.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 1;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table1.isSelected()){
            Table1.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table1.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table12MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 12;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table12.isSelected()){
            Table12.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
             JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table12.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                    

    private void Table4MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 4;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table4.isSelected()){
            Table4.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table4.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table6MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 6;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table6.isSelected()){
            Table6.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table6.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table7MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 7;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table7.isSelected()){
            Table7.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table7.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table8MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 8;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table8.isSelected()){
            Table8.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table8.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table9MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 9;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table9.isSelected()){
            Table9.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table9.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                   

    private void Table10MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 10;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table10.isSelected()){
            Table10.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table10.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
           JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    }                                    

    private void Table11MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        System.out.println(db.connect());
        currentTable = tableNo = 11;
        String setFalse = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + false + "' WHERE RESTAURANT_Table.No = " + tableNo;
        String setTrue = "UPDATE `RESTAURANT_Table`" + "SET isEmpty = '" + true + "' WHERE RESTAURANT_Table.No = " + tableNo ;
        Image imgoff = new ImageIcon(this.getClass().getResource("Error.png")).getImage();
        Image imgon = new ImageIcon(this.getClass().getResource("Check.png")).getImage();

        if(Table11.isSelected()){
            Table11.setIcon(new ImageIcon(imgoff));
            db.executeQuery(setFalse);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }else{
            Table11.setIcon(new ImageIcon(imgon));
            db.executeQuery(setTrue);
            JOptionPane.showMessageDialog(null, "Table selected", "Make a wish",JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println(db.disconnect());
    } 
    
    
    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        this.setVisible(false);
    }                                          

    private void Table1ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void Table9ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void DoneButtom1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        dispose();
        Billing1 bill = new Billing1();
        bill.setVisible(true);

        JOptionPane.showMessageDialog(this, "select table" ,"Make a wish",JOptionPane.INFORMATION_MESSAGE);
    }            
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillTable_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillTable_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillTable_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillTable_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillTable_view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    
    
    
    
    private javax.swing.JButton DoneButtom1;
    private javax.swing.JToggleButton Table1;
    private javax.swing.JToggleButton Table10;
    private javax.swing.JToggleButton Table11;
    private javax.swing.JToggleButton Table12;
    private javax.swing.JToggleButton Table2;
    private javax.swing.JToggleButton Table3;
    private javax.swing.JToggleButton Table4;
    private javax.swing.JToggleButton Table5;
    private javax.swing.JToggleButton Table6;
    private javax.swing.JToggleButton Table7;
    private javax.swing.JToggleButton Table8;
    private javax.swing.JToggleButton Table9;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;

}
